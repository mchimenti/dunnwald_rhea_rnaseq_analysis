hclust2 = hclust(dist2)
hclust2$labels <- pdata$study
myplclust(hclust2, hang = 0.1, labels=hclust2$labels, lab.col=as.numeric(hclust2$labels))
myplclust(hclust1, hang = 0.1, labels=hclust1$labels, lab.col=as.numeric(hclust1$labels))
myplclust(hclust2, hang = 0.1, labels=hclust2$labels, lab.col=as.numeric(hclust2$labels))
edata_trans = log2(edata+1)
dist3 = dist(t(edata_trans))
hclust3 = hclust(dist3)
hclust3$labels <- pdata$study
myplclust(hclust3, hang = 0.1, labels=hclust3$labels, lab.col=as.numeric(hclust3$labels))
?cutree
library(devtools)
library(Biobase)
library(dendextend)
library(rafalib)
set.seed(1235)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
close(con)
mp = montpick.eset
pdata=pData(mp)
edata=as.data.frame(exprs(mp))
fdata = fData(mp)
edata_trans = log2(edata+1)
##cutree
dist = dist(t(edata_trans))
hclust = hclust(dist)
hclust$labels <- pdata$study
dend = as.dendrogram(hclust)
cutree(dend, k = 2)
dist = dist(t(edata_trans))
hclust = hclust(dist)
dend = as.dendrogram(hclust)
cutree(dend, k = 2)
dend = cutree(dend, k = 2)
plot(dend)
kmeans1 = kmeans(edata_trans, centers=2)
names(kmeans1)
matplot(t(kmeans1$centers),col=1:3,type="l",lwd=3)
table(kmeans1$cluster)
kmeans1$centers
hclust
plot(hclust)
cutree(hclust, k=2)
clus2 = cutree(hclust, k=2)
myplclust(hclust, hang = 0.1, labels=hclust@labels)
hclust$labels <- pdata$study
myplclust(hclust, hang = 0.1, labels=hclust@labels)
dist1 = dist(t(edata))
hclust1 = hclust(dist1)
hclust1$labels <- pdata$study
myplclust(hclust1, hang = 0.1, labels=hclust1$labels, lab.col=as.numeric(hclust1$labels))
dist = dist(t(edata_trans))
hclust1 = hclust(dist)
hclust1$labels <- pdata$study
clus2 = cutree(hclust1, 2)
myplclust(hclust1, hang = 0.1, labels=hclust3$labels, lab.col=clus2)
myplclust(hclust1, hang = 0.1, labels=hclust1$labels, lab.col=clus2)
clus2 = cutree(hclust1, 5)
myplclust(hclust1, hang = 0.1, labels=hclust1$labels, lab.col=clus2)
kmeans1 = kmeans(edata_trans, centers=2)
matplot(t(kmeans1$centers),col=1:3,type="l",lwd=3)
heatmap(as.matrix(edata)[order(kmeans1$cluster),],col=colramp,Colv=NA,Rowv=NA)
colramp = colorRampPalette(c(3,"white",2))(9)
heatmap(as.matrix(edata)[order(kmeans1$cluster),],col=colramp,Colv=NA,Rowv=NA)
library(cluster)
library(fpc)
plotcluster(edata_trans, kmeans1$cluster)
myplclust(hclust1, hang = 0.1, labels=hclust1$labels, lab.col=kmeans$cluster)
myplclust(hclust1, hang = 0.1, labels=hclust1$labels, lab.col=kmeans1$cluster)
kmeans1
kmeans1$clusters
kmeans1$centers
plot(kmeans$centers)
plot(t(kmeans$centers))
plot(t(kmeans1$centers))
plot(t(kmeans1$centers), labels=kmeans1$cluster)
plot(t(kmeans1$centers))
kmeans1 = kmeans(t(edata_trans), centers=2)
kmeans1$centers
plot(kmeans1$centers)
names(kmeans1)
kmeans1$cluster
table(kmeans1$cluster, pdata$study)
library("phyloseq")
library("scales")
library("grid")
library("ggplot2")
base_dir <- "~/iihg/metagenomics/just_musselbed_2016/"
biom_file <- paste(base_dir,"open_ref_otus/otu_table_mc2_w_tax_no_pynast_failures_json.biom", sep='')
map_file <- paste(base_dir, "mapping.txt", sep="")
tree_file <- paste(base_dir, "open_ref_otus/rep_set.tre", sep="")
# RUN THIS AT CMD LINE BEFORE IMPORTING BIOM FROM QIIME 1.9
#biom convert -i otu_table_mc2_w_tax_no_pynast_failures.biom -o otu_table_mc2_w_tax_no_pynast_failures_json.biom --table-type="OUT table" --to-json
#######IMPORT AND MERGE
biom_otu_tax <- import_biom(biom_file)
map <- import_qiime_sample_data(map_file)
tree <- read_tree(tree_file)
river_bed <- merge_phyloseq(biom_otu_tax, map, tree)
colnames(tax_table(river_bed)) <- c(k = "Kingdom", p = "Phylum", c = "Class", o = "Order", f = "Family", g = "Genus", s = "Species")
plot_richness(river_bed, x="mussel_bed", color="mussel_bed") + geom_boxplot()
source("http://bioconductor.org/biocLite.R")
biocLite("edgeR")
biocLite("topGO")
packageStatus()
install.packages('Seurat')
library('seurat')
library('Seurat')
library(tidyverse)
table4a
table4a %>% gather('1999','2000',key = 'year',value = 'cases')
table2 %>% spread(key = type, value = count)
spread()?
spread?
table3 %>% separate(rate, into = c("cases", "population"))
table3 %>% separate(rate, into = c("cases", "population"), convert = TRUE)
stocks <- tibble(
year   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr    = c(   1,    2,    3,    4,    2,    3,    4),
return = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
stocks
who
who1 <- who %>%
gather(new_sp_m014:newrel_f65, key = "key", value = "cases", na.rm = TRUE)
who1
who2 <- who1 %>%
mutate(key = stringr::str_replace(key, 'newrel', 'new_rel'))
who3 <- who2 %>% separate(key, c("new","type","sexage"), sep = "_")
who3
who4 <- who3 %>% select(-iso2, -iso3, -new)
who4
who5 <- who4 %>% separate(sexage, c("sex", "age"), sep = 1)
who5
who_tidy %>%
gather(code, value, new_sp_m014:newrel_f65, na.rm = TRUE)  %>%
mutate(code = stringr:str_replace(code, "newrel", "new_rel")) %>%
separate(code, c("new","var","sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex","age"), sep = 1)
who_tidy <- who %>%
gather(code, value, new_sp_m014:newrel_f65, na.rm = TRUE)  %>%
mutate(code = stringr:str_replace(code, "newrel", "new_rel")) %>%
separate(code, c("new","var","sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex","age"), sep = 1)
who_tidy <- who %>%
gather(code, value, new_sp_m014:newrel_f65, na.rm = TRUE)  %>%
mutate(code = stringr::str_replace(code, "newrel", "new_rel")) %>%
separate(code, c("new","var","sexage")) %>%
select(-new, -iso2, -iso3) %>%
separate(sexage, c("sex","age"), sep = 1)
who_tidy
ggplot2(who_tidy, aes(x=country, y = value)) + geom_bar()
library(ggplot2)
ggplot2(who_tidy, aes(x=country, y = value)) + geom_bar()
ggplot(who_tidy, aes(x=country, y = value)) + geom_bar()
ggplot(who_tidy, aes(x=country) + geom_bar()
ggplot(who_tidy, aes(x=country)) + geom_bar()
ggplot(who_tidy, aes(x=country)) + geom_bar()
airlines
library(nycflights13)
airlines
flights2 <- flights %>%
select(year:day, hour, origin, dest, tailnum, carrier)
flights2
flights2 %>%
select(-origin, -dest) %>%
left_join(airlines, by = "carrier")
?match
flights2 %>%
left_join(planes, by = "tailnum")
flights2 %>%
left_join(airports, c("dest" = "faa"))
?str_view()
library(DESeq2)
#annotation
library(biomaRt)
library("AnnotationDbi")
library("org.Hs.eg.db")
#Exploratory analysis
library(dplyr)
library(pcaExplorer)
setwd("~/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/analysis")
#######################################
## FeatureCounts > DESeq2 > PCAExplorer
#######################################
get_annotation <- function(dds, biomart_dataset, idtype){
if(is.null(biomart_dataset))
stop("Select a species to generate the corresponding annotation.
To obtain a list, type mart = useMart('ensembl'), followed by listDatasets(mart).")
mart <- useMart(biomart="ENSEMBL_MART_ENSEMBL",
host="www.ensembl.org",
dataset=biomart_dataset)
anns <- getBM(attributes = c(idtype, "external_gene_name", "description"),
filters = idtype,
values = rownames(dds),
mart = mart)
# keep and match with the ones that are actually there
anns2 <- anns[match(rownames(dds), anns[, 1]), ]
rownames(anns2) <- rownames(dds)
# rename the columns rsp. add row names to be consistent with other function
colnames(anns2) <- c("gene_id","gene_name","description")
return(anns2)
}
matrix_path <- "/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/dunnwall_rhea_annotated_comb.counts"
count_mat <- read.table(matrix_path, header=TRUE, row.names = 'id')
annot <- count_mat[28]
count_mat <- count_mat[,1:27]
count_mat <- count_mat[,c(6,1:5,7:27)]  ## reorder columns to match coldata order
count_mat <- as.matrix(count_mat)
colData <- read.csv("/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/sample_metadata.csv")
colData <- arrange(colData, sname)
colData$age <- as.factor(colData$age)
count_mat <- count_mat[,c(2:5,7:24)]
colData <- filter(colData, sname != c("X13A_20180513000","X13B_20180513000"))
head(count_mat)
count_mat <- count_mat[,-c(1,2)]
colData
colData <- colData %>% mutate(group = as.factor(paste0(colData$tissue, colData$syndromic)))
dds_drop <- DESeqDataSetFromMatrix(countData = count_mat,
colData = colData,
design = ~ group)
colData
colData <- filter(colData, sname != c("X13A_20180513000","X13B_20180513000"))
colData
colData <- read.csv("/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/sample_metadata.csv")
colData <- arrange(colData, sname)
colData$age <- as.factor(colData$age)
colData <- filter(colData, sname != c("X13A_20180513000","X13B_20180513000"))
colData <- filter(colData, sname !%in% c("X13A_20180513000","X13B_20180513000"))
colData <- filter(colData, sname %in% -c("X13A_20180513000","X13B_20180513000"))
colData <- filter(colData, sname %in% c("X13A_20180513000","X13B_20180513000"))
colData
colData <- read.csv("/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/sample_metadata.csv")
colData <- arrange(colData, sname)
colData$age <- as.factor(colData$age)
colData <- filter(colData, !(sname %in% c("X13A_20180513000","X13B_20180513000")))
colData
count_mat <- count_mat[,-c(1,2)]
colData <- colData %>% mutate(group = as.factor(paste0(colData$tissue, colData$syndromic)))
dds_drop <- DESeqDataSetFromMatrix(countData = count_mat,
colData = colData,
design = ~ group)
colData
count_mat
str(count_mat)
count_mat <- read.table(matrix_path, header=TRUE, row.names = 'id')
count_mat <- count_mat[,1:27]
count_mat <- count_mat[,c(6,1:5,7:27)]  ## reorder columns to match coldata order
count_mat <- as.matrix(count_mat)
str(count_mat)
count_mat <- count_mat[,-c(2,3)]
str(count_mat)
colData$sname
View(count_mat)
str(count_mat)
colData
dds_drop <- DESeqDataSetFromMatrix(countData = count_mat,
colData = colData,
design = ~ group)
dds_drop <- dds_drop[ rowSums(counts(dds_drop)) > 5, ]
dds_drop$group <- relevel(dds_drop$group, ref='lipn')
dds_drop <- DESeq(dds_drop)
##---------------launch PCA Explorer on dds object
anno <- get_annotation(dds_drop, 'hsapiens_gene_ensembl','ensembl_gene_id')
anno <- na.omit(anno)
rld_drop <- rlog(dds_drop, blind=FALSE)
pcaExplorer(dds=dds_drop,annotation=anno,rlt=rld_drop)
res_hip_syn <- results(dds_drop, contrast=c("group", "hipy", "hipn"))
sig <- 0.1
res_hip_syn <- na.omit(res_hip_syn)
res_hip_syn_sig <- res_hip_syn_sig[res_hip_syn$padj < sig & res_hip_syn$baseMean > 5.0,]
res_hip_syn_sig <- res_hip_syn[res_hip_syn$padj < sig & res_hip_syn$baseMean > 5.0,]
res_hip_syn_ord <- res_hip_syn_sig[order(res_hip_syn_sig$padj),]
res_hip_syn_ord
write.csv(res_hip_syn_ord, file = "/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/res_hip_syn_padj_0p05.csv")
sig = 0.05
res_oral_lip_nosyn <- results(dds_drop, contrast=c("group","oraln","lipn"))
res_oral_lip_nosyn <- na.omit(res_oral_lip_nosyn)
res_oral_lip_nosyn_sig <- res_oral_lip_nosyn[res_oral_lip_nosyn$padj < sig & res_oral_lip_nosyn$baseMean > 5.0,]
res_oral_lip_nosyn_ord <- res_oral_lip_nosyn_sig[order(res_oral_lip_nosyn_sig$padj), ]
res_oral_lip_nosyn_ord$gene <- anno[row.names(res_oral_lip_nosyn_ord), "gene_name"]
res_oral_lip_syn <- results(dds_drop, contrast=c("group","oraly","lipn"))
res_oral_lip_syn <- na.omit(res_oral_lip_syn)
res_oral_lip_syn_sig <- res_oral_lip_syn[res_oral_lip_syn$padj < sig & res_oral_lip_syn$baseMean > 5.0,]
res_oral_lip_syn_ord <- res_oral_lip_syn_sig[order(res_oral_lip_syn_sig$padj), ]
res_oral_lip_syn_ord$gene <- anno[row.names(res_oral_lip_syn_ord), "gene_name"]
res_oral_lip_syn_ord
res_oral_lip_nosyn_ord
res_oral_lip_syn <- results(dds_drop, contrast=c("group","oraly","lipy"))
res_oral_lip_syn <- na.omit(res_oral_lip_syn)
res_oral_lip_syn_sig <- res_oral_lip_syn[res_oral_lip_syn$padj < sig & res_oral_lip_syn$baseMean > 5.0,]
res_oral_lip_syn_ord <- res_oral_lip_syn_sig[order(res_oral_lip_syn_sig$padj), ]
res_oral_lip_syn_ord$gene <- anno[row.names(res_oral_lip_syn_ord), "gene_name"]
res_oral_lip_syn_ord
write.csv(res_oral_lip_nosyn_ord,
file = "/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/res_oral_lip_NonSyn_padj_0p05.csv")
write.csv(res_oral_lip_syn_ord,
file = "/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/res_oral_lip_Syn_padj_0p05.csv")
res_oral_syn <- na.omit(res_oral_syn)  #drop NA rows
res_oral_syn_sig <- res_oral_syn[res_oral_syn$padj < sig & res_oral_syn$baseMean > 5.0,]
res_oral_syn_ord <- res_oral_syn_sig[order(res_oral_syn_sig$padj),]
res_oral_syn <- results(dds_drop, contrast=c("group", "oraly", "oraln"))
sig <- 0.1
res_oral_syn <- na.omit(res_oral_syn)  #drop NA rows
res_oral_syn_sig <- res_oral_syn[res_oral_syn$padj < sig & res_oral_syn$baseMean > 5.0,]
res_oral_syn_ord <- res_oral_syn_sig[order(res_oral_syn_sig$padj),]
res_oral_syn_ord
res_lip_syn <- results(dds_drop, contrast=c("group", "lipy", "lipn"))
res_lip_syn <- na.omit(res_lip_syn)  #drop NA rows
res_lip_syn_sig <- res_lip_syn[res_lip_syn$padj < sig & res_lip_syn$baseMean > 5.0,]
res_lip_syn_ord <- res_lip_syn_sig[order(res_lip_syn_sig$padj),]
res_lip_syn_ord
res_oral_syn_ord
sig <- 0.2
res_oral_syn <- na.omit(res_oral_syn)  #drop NA rows
res_oral_syn_sig <- res_oral_syn[res_oral_syn$padj < sig & res_oral_syn$baseMean > 5.0,]
res_oral_syn_ord <- res_oral_syn_sig[order(res_oral_syn_sig$padj),]
res_oral_syn_ord
res_hip_syn_ord
res_oral_syn_ord
write.csv(res_oral_syn_ord, file =
"/Users/mchimenti/iihg/RNA_seq/dunnwald_lab/project_rhea_jun2018/res_oral_syn_padj_0p2.csv")
#top oral syndromic
plotCounts(dds_drop, gene = "ENSG00000171199", intgroup = 'group')
library(sleuth)
?volcano
#negative binomial GLM
library(DESeq2)
??plotMA
?plotMA
res_oral_syn_ord
head(as.data.frame(counts(dds_drop, normalized = TRUE))
)
res_oral_syn_ord_counts <- merge(as.data.frame(res_oral_syn_ord), as.data.frame(counts(dds_drop, normalized=TRUE)),
by="row.names", sort=FALSE)
head(res_oral_syn_ord_coutns)
head(res_oral_syn_ord_counts)
volcanoplot <- function (res, lfcthresh=2, sigthresh=0.05, main="Volcano Plot", legendpos="bottomright", labelsig=TRUE, textcx=1, ...) {
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=main, ...))
with(subset(res, padj<sigthresh ), points(log2FoldChange, -log10(pvalue), pch=20, col="red", ...))
with(subset(res, abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="orange", ...))
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="green", ...))
if (labelsig) {
require(calibrate)
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), textxy(log2FoldChange, -log10(pvalue), labs=Gene, cex=textcx, ...))
}
legend(legendpos, xjust=1, yjust=1, legend=c(paste("FDR<",sigthresh,sep=""), paste("|LogFC|>",lfcthresh,sep=""), "both"), pch=20, col=c("red","orange","green"))
}
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1, sigthresh=0.05, textcx=.8, xlim=c(-2.3, 2))
dev.off()
?textxy
install.packages('calibrate')
library('calibrate')
volcanoplot <- function (res, lfcthresh=2, sigthresh=0.05, main="Volcano Plot", legendpos="bottomright", labelsig=TRUE, textcx=1, ...) {
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=main, ...))
with(subset(res, padj<sigthresh ), points(log2FoldChange, -log10(pvalue), pch=20, col="red", ...))
with(subset(res, abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="orange", ...))
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="green", ...))
if (labelsig) {
require(calibrate)
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), textxy(log2FoldChange, -log10(pvalue), labs=Gene, cex=textcx, ...))
}
legend(legendpos, xjust=1, yjust=1, legend=c(paste("FDR<",sigthresh,sep=""), paste("|LogFC|>",lfcthresh,sep=""), "both"), pch=20, col=c("red","orange","green"))
}
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1, sigthresh=0.05, textcx=.8, xlim=c(-2.3, 2))
dev.off()
names(res_oral_syn_ord_counts)[1] <- "Gene"
head(res_oral_syn_ord_counts)
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1, sigthresh=0.05, textcx=.8, xlim=c(-2.3, 2))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1, sigthresh=0.2, textcx=.8, xlim=c(-3, 3), ylim = c(0,10))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.5, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ylim = c(2,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.5, sigthresh=0.1, textcx=.5, xlim=c(-3, 3))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ymax = 6)
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ylim = 6)
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1000, pointsize=20)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=10)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ylim = c(3,6))
dev.off()
head(res_oral_syn_ord_counts)
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=75)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-3, 3), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=75)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-4, 4), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=75)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-5, 5), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=75)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-10, 10), ylim = c(3,6))
dev.off()
?textxy()
volcanoplot <- function (res, lfcthresh=2, sigthresh=0.05, main="Volcano Plot", legendpos="topright", labelsig=TRUE, textcx=1, ...) {
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=main, ...))
with(subset(res, padj<sigthresh ), points(log2FoldChange, -log10(pvalue), pch=20, col="red", ...))
with(subset(res, abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="orange", ...))
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="green", ...))
if (labelsig) {
require(calibrate)
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), textxy(log2FoldChange, -log10(pvalue), labs=Gene, cex=textcx, offset = 0.3...))
}
legend(legendpos, xjust=1, yjust=1, legend=c(paste("FDR<",sigthresh,sep=""), paste("|LogFC|>",lfcthresh,sep=""), "both"), pch=20, col=c("red","orange","green"))
}
volcanoplot <- function (res, lfcthresh=2, sigthresh=0.05, main="Volcano Plot", legendpos="topright", labelsig=TRUE, textcx=1, ...) {
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=main, ...))
with(subset(res, padj<sigthresh ), points(log2FoldChange, -log10(pvalue), pch=20, col="red", ...))
with(subset(res, abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="orange", ...))
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="green", ...))
if (labelsig) {
require(calibrate)
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), textxy(log2FoldChange, -log10(pvalue), labs=Gene, cex=textcx, offset=0.3, ...))
}
legend(legendpos, xjust=1, yjust=1, legend=c(paste("FDR<",sigthresh,sep=""), paste("|LogFC|>",lfcthresh,sep=""), "both"), pch=20, col=c("red","orange","green"))
}
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=75)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-10, 10), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-10, 10), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-12, 10), ylim = c(3,6))
dev.off()
res_oral_syn_ord_counts <- merge(as.data.frame(res_oral_syn_ord), as.data.frame(counts(dds_drop, normalized=TRUE)),
by="row.names", sort=FALSE)
res_oral_syn_ord_counts$ext_gene <- anno[row.names(res_oral_syn_ord_counts), "gene_name"]
head(res_oral_syn_ord_counts)
names(res_oral_syn_ord_counts)[1] <- "Gene"
res_oral_syn_ord_counts$ext_gene <- anno[res_oral_syn_ord_counts$Gene, "gene_name"]
head(res_oral_syn_ord_counts)
volcanoplot <- function (res, lfcthresh=2, sigthresh=0.05, main="Volcano Plot", legendpos="topright", labelsig=TRUE, textcx=1, ...) {
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=main, ...))
with(subset(res, padj<sigthresh ), points(log2FoldChange, -log10(pvalue), pch=20, col="red", ...))
with(subset(res, abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="orange", ...))
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), points(log2FoldChange, -log10(pvalue), pch=20, col="green", ...))
if (labelsig) {
require(calibrate)
with(subset(res, padj<sigthresh & abs(log2FoldChange)>lfcthresh), textxy(log2FoldChange, -log10(pvalue), labs=ext_gene, cex=textcx, offset=0.3, ...))
}
legend(legendpos, xjust=1, yjust=1, legend=c(paste("FDR<",sigthresh,sep=""), paste("|LogFC|>",lfcthresh,sep=""), "both"), pch=20, col=c("red","orange","green"))
}
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-12, 10), ylim = c(3,6))
dev.off()
png("diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, main = "Volcano Plot: Syndromic DE Genes in Oral Tissue", lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-12, 10), ylim = c(3,6))
dev.off()
png("oral_syn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, main = "Volcano Plot: Syndromic DE Genes in Oral Tissue", lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-12, 10), ylim = c(3,6))
dev.off()
png("oral_syn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, main = "Volcano Plot: Syndromic DE Genes in Oral Tissue", lfcthresh=1.0, sigthresh=0.1, textcx=.5, xlim=c(-12, 7), ylim = c(3,6))
dev.off()
res_oral_lip_nosyn_ord
names(res_oral_lip_nosyn_ord)[1] <- "Gene"
res_oral_lip_nosyn_ord$ext_gene <- anno[res_oral_lip_nosyn_ord$Gene, "gene_name"]
head(res_oral_lip_nosyn_ord)
head(res_oral_syn_ord_counts)
res_oral_lip_syn_ord <- res_oral_lip_syn_sig[order(res_oral_lip_syn_sig$padj), ]
res_oral_lip_syn_ord$gene <- anno[row.names(res_oral_lip_syn_ord), "gene_name"]
res_oral_lip_nosyn_ord <- res_oral_lip_nosyn_sig[order(res_oral_lip_nosyn_sig$padj), ]
res_oral_lip_nosyn_ord$gene <- anno[row.names(res_oral_lip_nosyn_ord), "gene_name"]
head(res_oral_lip_nosyn_ord)
png("oral_lip_nosyn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, main = "Volcano Plot: DE genes Oral vs. Lip, NonSyndromic", lfcthresh=1.5, sigthresh=0.01, textcx=.5, xlim=c(-10, 10), ylim = c(3,16))
dev.off()
res_oral_lip_nosyn_ord
filter(res_oral_lip_nosyn_ord, padj < 0.01)
sig = 0.01
res_oral_lip_nosyn <- results(dds_drop, contrast=c("group","oraln","lipn"))
res_oral_lip_nosyn <- na.omit(res_oral_lip_nosyn)
res_oral_lip_nosyn_sig <- res_oral_lip_nosyn[res_oral_lip_nosyn$padj < sig & res_oral_lip_nosyn$baseMean > 5.0,]
res_oral_lip_nosyn_ord <- res_oral_lip_nosyn_sig[order(res_oral_lip_nosyn_sig$padj), ]
res_oral_lip_nosyn_ord
png("oral_lip_nosyn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_syn_ord_counts, main = "Volcano Plot: DE genes Oral vs. Lip, NonSyndromic", lfcthresh=1.5, sigthresh=0.01, textcx=.5, xlim=c(-20, 20), ylim = c(2,50))
dev.off()
png("oral_lip_nosyn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_lip_nosyn_ord, main = "Volcano Plot: DE genes Oral vs. Lip, NonSyndromic", lfcthresh=1.5, sigthresh=0.01, textcx=.5, xlim=c(-20, 20), ylim = c(2,50))
dev.off()
res_oral_lip_nosyn_ord$ext_gene <- anno[row.names(res_oral_lip_nosyn_ord), "gene_name"]
png("oral_lip_nosyn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_lip_nosyn_ord, main = "Volcano Plot: DE genes Oral vs. Lip, NonSyndromic", lfcthresh=1.5, sigthresh=0.01, textcx=.5, xlim=c(-20, 20), ylim = c(2,50))
dev.off()
png("oral_lip_nosyn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=20, res=100)
volcanoplot(res_oral_lip_nosyn_ord, main = "Volcano Plot: DE genes Oral vs. Lip, NonSyndromic", lfcthresh=2.5, sigthresh=0.001, textcx=.25, xlim=c(-12, 12), ylim = c(4,50))
dev.off()
png("oral_lip_nosyn_diffexpr-volcanoplot.png", 1200, 1500, pointsize=15, res=150)
volcanoplot(res_oral_lip_nosyn_ord, main = "Volcano Plot: DE genes Oral vs. Lip, NonSyndromic", lfcthresh=2.5, sigthresh=0.001, textcx=.25, xlim=c(-12, 12), ylim = c(4,50))
dev.off()
head(res_oral_lip_nosyn_ord)
